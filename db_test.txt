2.1. Удалить кондитеров с самым коротким ФИО (нельзя использовать числовые и строковые константы)

	DELETE FROM confictioners
	WHERE LENGTH(name) = (select MIN(LENGTH(name)) from confictioners);

2.2. Уменьшить размер скидки у заказов, со скидкой более 10%, на 5%

	UPDATE orders
	SET discount = 5
	WHERE discount > 10;

3.1. Вывести ФИО кондитеров в алфавитном порядке

	SELECT name FROM confictioners
	ORDER BY name (ASC);

3.2. Вывести ФИО кондитеров и названия тортов, которые они умеют готовить в алфавитном порядке

	select confictioners.name, cakes.name from confictioners_skills
	join confictioners 
	on confictioner_id = confictioners.id
	join cakes 
	on cake_id = cakes.id
	order by confictioners.name, cakes.name;

3.3. Вывести номера всех заказов и ФИО их исполнителей в порядке возрастания номера

	select orders.id, confictioners.name from orders
	left join confictioners
	on confictioner_id = confictioners.id
	order by orders.id;

3.4. Вывести всех клиентов, которые заказывали торты "Наполеон" или "Королевский". Запрос не должен содержать операторов AND, OR, UNION.
	select distinct clients.name from clients
	join orders 
	on client_id = clients.id
	join cakes 
	on cakes.id = orders.cake_id
	where cakes.name in ('Наполеон', 'Королевский')
	;

3.5. Вывести названия тортов и средний вес заказа, у которых вес среднего заказа превышает 12 кг

	select cakes.name, AVG(weight) from orders
	join cakes
	on cakes.id = cake_id
	group by cakes.name
	having AVG(weight) > 12
	;

3.6. Для всех кондитеров вывести самый заказываемый у них торт. Если таких тортов много вывести любой из них, если нет - вывести null.

	
	select distinct on (subq.conf_name) subq.conf_name, subq.c_name  from (

	select confictioners.name as conf_name, cakes.name as c_name, count(*) as cake_orders_per_conf from orders
	right join confictioners
	on confictioners.id = confictioner_id
	left join cakes
	on cakes.id = cake_id
	group by confictioners.name, cakes.name
	order by confictioners.name asc, cake_orders_per_conf desc
	
	) subq
	;
